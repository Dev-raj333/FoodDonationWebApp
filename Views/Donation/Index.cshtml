@model IPagedList<FoodDonationWebApp.Models.Donation>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Donations List";
}

<h2>Donations List</h2>

<table class="table">
    <thead>
        <tr>
            <th>Donor Name</th>
            <th>Donor Address</th>
            <th>Food Type</th>
            <th>Quantity</th>
            <th>Expiration Date</th>
            <th>Status</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @if(Model.Count != 0)
        {
            @foreach (var donation in Model)
            {
                <tr>
                    <td>@donation.Donor?.FirstName  @donation.Donor?.LastName</td>
                    <td>@donation.Donor?.Address</td>
                    <td>@donation.FoodType</td>
                    <td>@donation.Quantity</td>
                    <td>@donation.ExpiraryDate?.ToString("d")</td>
                    <td>@donation.Status</td>
                    <td>
                        <a asp-action="Details" asp-route-id="@donation.Id" class="btn btn-primary">Details</a>

                        @if (User.IsInRole("Admin"))
                        {
                            <a asp-action="Edit" asp-route-id="@donation.Id" class="btn btn-warning">Edit</a>
                            <a asp-action="Delete" asp-route-id="@donation.Id" class="btn btn-danger">Delete</a>

                            @if (donation.Status == FoodDonationWebApp.Models.DonationStatus.Available)
                            {
                                <a asp-action="Create" asp-controller="PickupRequest" asp-route-donationId="@donation.Id" class="btn btn-info">Assign Pickup</a>
                            }
                        }
                    </td>
                </tr>
            }
        }else
        {
            <tr>
                <td colspan="7" class="text-center">No records found</td>
            </tr>
        }
    </tbody>
</table>

@if (User.IsInRole("Donor"))
{
    <a asp-action="Create" class="btn btn-success">Create New Donation</a>
}
<div class="d-flex justify-content-end">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }), new PagedListRenderOptions
{
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    MaximumPageNumbersToDisplay = 10,
    LinkToFirstPageFormat = "«",
    LinkToPreviousPageFormat = "‹",
    LinkToNextPageFormat = "›",
    LinkToLastPageFormat = "»",
    ContainerDivClasses = new[] { "pagination-container" },
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    ActiveLiElementClass = "active"
})
</div>




