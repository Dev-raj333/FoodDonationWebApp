@model IPagedList<FoodDonationWebApp.Models.AllocatedFood>
@using X.PagedList;
@using X.PagedList.Mvc.Core;
@{
    ViewData["Title"] = "Allocated List";
    int serialNumber = 1 + ((Model.PageNumber - 1) * Model.PageSize);
}
<h2>Allocated Food Items</h2>
<table class="table">
    <thead>
        <tr>
            <th>SN</th>
            <th>RecipiantName</th>
            <th>FoodType</th>
            <th>Quantity</th>
            <th>DonationDate</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if(Model == null || !Model.Any())
        {
            <tr>
                <td colspan="4" class="text-center">No records found</td>
            </tr>
        }else
        {
            @foreach (var item in Model)
            {
                <tr>
                    <td>@serialNumber</td>
                    <td>@item.Recipient.FirstName @item.Recipient.LastName</td>
                    <td>@item.RequestedFoodType</td>
                    <td>@item.Quantity</td>
                    <td>@item.DonatedDate</td>
                    <td>
                        <a asp-action="Create" asp-controller="DropRequest" asp-route-id="@item.Id" class="btn btn-primary btn-sm">Edit</a>
                    </td>
                </tr>
                serialNumber++;  
            }

        }
        
    </tbody>
</table>
<div class="d-flex justify-content-end">
    @Html.PagedListPager(Model, page => Url.Action("AllocateFood", new { page, pageSize = Model.PageSize }), new PagedListRenderOptions
{
    DisplayLinkToFirstPage = PagedListDisplayMode.Always,
    DisplayLinkToLastPage = PagedListDisplayMode.Always,
    DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
    DisplayLinkToNextPage = PagedListDisplayMode.Always,
    DisplayLinkToIndividualPages = true,
    MaximumPageNumbersToDisplay = 10,
    LinkToFirstPageFormat = "«",
    LinkToPreviousPageFormat = "‹",
    LinkToNextPageFormat = "›",
    LinkToLastPageFormat = "»",
    ContainerDivClasses = new[] { "pagination-container" },
    UlElementClasses = new[] { "pagination" },
    LiElementClasses = new[] { "page-item" },
    PageClasses = new[] { "page-link" },
    ActiveLiElementClass = "active"
})
</div>

