@model RegisterVM

@{
    ViewData["Title"] = "Register";
}
<div class="container">
    <div class="card-body">
        <h3 class="text-muted mb-4">Register Users</h3>
        <hr />
        <form asp-action="Register" asp-controller="Auth" method="post" enctype="multipart/form-data" novalidate>
            <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

            <div class="mb-3">
                <label asp-for="FirstName" class="form-label"></label>
                <span class="text-danger">*</span>
                <input asp-for="FirstName" class="form-control" placeholder="Enter First Name" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="LastName" class="form-label"></label>
                <span class="text-danger">*</span>
                <input asp-for="LastName" class="form-control" placeholder="Enter Last Name" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Email" class="form-label"></label>
                <span class="text-danger">*</span>
                <input asp-for="Email" class="form-control" autocomplete="email" placeholder="Enter Email" />
                <span asp-validation-for="Email" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Password" class="form-label"></label>
                <span class="text-danger">*</span>
                <input asp-for="Password" class="form-control" type="password" placeholder="Enter Password" />
                <span asp-validation-for="Password" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="ConfirmPassword" class="form-label"></label>
                <span class="text-danger">*</span>
                <input asp-for="ConfirmPassword" class="form-control" type="password" placeholder="Confirm Password" />
                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Address" class="form-label"></label>
                <input asp-for="Address" id="Address" class="form-control" type="text" placeholder="Enter Address" />
                <span asp-validation-for="Address" class=" = text-danger"></span>
            </div>
            <span>Choose street from map...</span>
            <div class="mb-3">
                <div class="row">
                    <div class="col-md-4">
                        <div class="mb-3">
                            <label for="StreetName" class="form-label">Street Name</label>
                            <input type="text" id="StreetName" asp-for="StreetName" name="StreetName" class="form-control" readonly />
                        </div>
                        <div class="mb-3">
                            <label for="Latitude" class="form-label">Latitude</label>
                            <input type="text" id="Latitude" asp-for="Latitude" name="Latitude" class="form-control" readonly />
                        </div>
                        <div class="mb-3">
                            <label for="Longitude" class="form-label">Longitude</label>
                            <input type="text" id="Longitude" asp-for = "Longitude" name="Longitude" class="form-control" readonly />
                        </div>
                    </div>

                    <div class="col-md-8">
                        <div id="map" style="height: 300px;"></div>
                    </div>
                </div>
            </div>

            <div class="mb-3">
                <label asp-for="PhoneNo" class="form-label"></label>
                <input asp-for="PhoneNo" class="form-control" type="text" placeholder="Enter Contact no" maxlength="10" />
                <span asp-validation-for="PhoneNo" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="SelectedRole" class="form-label"></label>
                <select asp-for="SelectedRole" class="form-control" asp-items="Model.Roles"></select>
                <span asp-validation-for="SelectedRole" class="text-danger"></span>
            </div>

            <div class="mb-4">
                <label asp-for="Profile" class="form-label"></label>
                <input asp-for="Profile" class="form-control" type="file" />
                <span asp-validation-for="Profile"></span>
            </div>
            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">Register</button>
            </div>
        </form>
    </div> 
    <div class="card-footer text-center">
        <small class="text-muted">Fields marked with <span class="text-danger">*</span> are required.</small>
    </div>
</div>
@section scripts{
    <partial name="_ValidationScriptsPartial.cshtml" />
}
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
<script>
     

    var map = L.map('map', {
        center: kathmanduCenter,
        zoom: 13,
        maxBounds: kathmanduBounds, 
        maxZoom: 19, 
        minZoom: 12  
    });
    //var map = L.map('map').setView([27.7172, 85.3240], 13); // Zoom level 13 is ideal for a city-level view

    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        maxZoom: 19,
        attribution: '© OpenStreetMap contributors'
    }).addTo(map);

     var marker;
    function fetchAddress(lat, lng) {
        const url = `https://nominatim.openstreetmap.org/reverse?lat=${lat}&lon=${lng}&format=json&addressdetails=1`;

        fetch(url)
            .then(response => response.json())
            .then(data => {
                if (data && data.address) {
                    document.getElementById('StreetName').value = data.address.road || "Unknown Street";
                } else {
                    document.getElementById('StreetName').value = "Street not found";
                }
            })
            .catch(err => {
                console.error("Error fetching address:", err);
                document.getElementById('StreetName').value = "Error fetching street name";
            });
    }

    // Handle map click event
    map.on('click', function (e) {
        const lat = e.latlng.lat;
        const lng = e.latlng.lng;

        document.getElementById('Latitude').value = lat;
        document.getElementById('Longitude').value = lng;

        if (marker) {
            marker.setLatLng(e.latlng);
        } else {
            marker = L.marker(e.latlng).addTo(map);
        }

        fetchAddress(lat, lng);
    });
</script>
